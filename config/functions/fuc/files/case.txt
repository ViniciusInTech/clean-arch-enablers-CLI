<<case_name_pascal_case>>UseCase.java
<<case_name_snake_case>>\
package <<package>>;

import <<package_no_use_case>>.loggers.Logger;
import <<package>>.metada.UseCaseMetadata;
import <<package>>.io.inputs.<<case_name_pascal_case>>UseCaseInput;
import <<package>>.io.outputs.<<case_name_pascal_case>>UseCaseOutput;
import <<package>>.specifics.functions.FunctionUseCase;

public abstract class <<case_name_pascal_case>>UseCase extends FunctionUseCase< <<case_name_pascal_case>>UseCaseInput, <<case_name_pascal_case>>UseCaseOutput> {{
    protected <<case_name_pascal_case>>UseCase(Logger logger) {{
        super(
                UseCaseMetadata.ofOpenAccessUseCase(<<case_name_pascal_case>>UseCase.class, "some description about this use case"),
                logger
        );
    }}
}}